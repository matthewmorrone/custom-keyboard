diff --git a/README.md b/README.md
index 36e6ba9..989e166 100644
--- a/README.md
+++ b/README.md
@@ -1,15 +1,19 @@
++ change space insertion to mod on full line length 
++ show clipboard contents after cut/copy
++ convenience method for setting checks
++ function to determine cursor position
++ don't cancel popup if it has a long press action
++ delete all space up to line end (while prev char is space)
++ add toggle for whether or not the first member of the popup is sent upon release
 + font color, background, border from settings
++ prefix/suffix lines, add line numbers
 + settings for numbers, colors, popupchars
 + reorder layouts from settings: draggable for layout management
-+ don't cancel popup if it has a long press action
 + more pinyin, combine with autocorrect
 + selection doesn't work with 4space
-+ function to determine cursor position
-+ delete all space up to line end (while prev char is space)
 + press and hold del/backspace for up to space
 + runtime modification/generation of layouts
 + generate keyboard programmatically
-+ show clipboard contents after cut/copy
 + page containing clipboard history
 + choice of fifo or filo for clipboard history
 + button to access recent clipboard entries
@@ -18,14 +22,9 @@
 + close by clicking outside popup
 + delete autoinsertions by pressing once
 + colorize categories
-+ settings use categories for hide/show
-+ layout checkboxes use category
 + normalizer.normalize(x, normalizer.form.nfkc)
 + macro customization
 + stay on current layout
-+ change space insertion to mod on full line length 
-+ prefix/suffix lines, add line numbers
-+ transparent keyboard
 + selection moves while typing
 + select with manual cursor movement
 + move cursor and select text by dragging the space key
@@ -34,7 +33,6 @@
 + drag control for keyboard height
 + adjust key size
 + key height change
-+ suggestion bar
 + include tags ffs
 + emoji 
 + scrollable/swipeable areas
@@ -52,7 +50,6 @@
 + slideable bar
 + shortcuts with sigil
 + bug when autoshift
-+ convenience method for setting checks
 + column from table
 + identify hash
 + format numbers
@@ -72,7 +69,6 @@
 + 2d layout navigation
 + popup for arbitrary find/replace screen
 + swiping
-+ separate out settings page for layouts and custom keys
 + layout of popup
 + popup contents should also be keys
 + if there are too many entries in a keys popup, it doesn't render properly
@@ -84,9 +80,7 @@
 + hide and show specific keys, especially in the top or bottom
 + row with toggles from settings page
 + add setting that allows specification of longpress delay
-+ add toggle for whether or not the first member of the popup is sent upon release
 + add slots in the settings page for customizing the letters that appear on long press
-+ settings screen for autoreplace configuration
 + script for autoreinstall
 + password buttons
 + calculation parsing
diff --git a/app/src/main/java/com/custom/keyboard/CustomInputMethodService.java b/app/src/main/java/com/custom/keyboard/CustomInputMethodService.java
index 95f3ec0..ffadf06 100644
--- a/app/src/main/java/com/custom/keyboard/CustomInputMethodService.java
+++ b/app/src/main/java/com/custom/keyboard/CustomInputMethodService.java
@@ -136,7 +136,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
         if (sharedPreferences.getBoolean("navigation", t)) {layouts.add(new CustomKeyboard(this, R.layout.navigation,  "navigation",  "Navigation", "  →←↑↓").setCategory(Category.Util).setOrder(-1));}
         if (sharedPreferences.getBoolean("pinyin",     t)) {layouts.add(new CustomKeyboard(this, R.layout.pinyin,      "pinyin",      "Pinyin",     "").setCategory(Category.Lang));}
         if (sharedPreferences.getBoolean("pointy",     t)) {layouts.add(new CustomKeyboard(this, R.layout.pointy,      "pointy",      "Pointy",     "ᛩꟽⵉᚱⵜY").setCategory(Category.Font));}
-                                                            layouts.add(new CustomKeyboard(this, R.layout.primary,     "primary",     "Primary",    "qwerty").setCategory(Category.Main));
+        //                                                    layouts.add(new CustomKeyboard(this, R.layout.primary,     "primary",     "Primary",    "qwerty").setCategory(Category.Main));
         if (sharedPreferences.getBoolean("qwerty",     t)) {layouts.add(new CustomKeyboard(this, R.layout.qwerty,      "qwerty",      "Qwerty",     "qwerty").setCategory(Category.Misc));}
         if (sharedPreferences.getBoolean("rotated",    t)) {layouts.add(new CustomKeyboard(this, R.layout.rotated,     "rotated",     "Rotated",    "ʎʇɹəʍb").setCategory(Category.Font));}
         if (sharedPreferences.getBoolean("shift_1",    t)) {layouts.add(new CustomKeyboard(this, R.layout.shift_1,     "shift_1",     "Shift",     "qWeRtY").setCategory(Category.Misc));}
@@ -149,7 +149,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
         if (sharedPreferences.getBoolean("unicode",    t)) {layouts.add(new CustomKeyboard(this, R.layout.unicode,     "unicode",     "Unicode",    "\\uxxxx").setCategory(Category.Util));}
                                                             layouts.add(new CustomKeyboard(this, R.layout.url,         "url",         "URL",        "@/.com").setCategory(Category.Main));
         if (sharedPreferences.getBoolean("utility",    t)) {layouts.add(new CustomKeyboard(this, R.layout.utility,     "utility",     "Utility",    "/**/").setCategory(Category.Util).setOrder(-3));}
-                                                            layouts.add(new CustomKeyboard(this, R.layout.words,       "words",       "Words",      "qwerty").setCategory(Category.Misc));
+        if (sharedPreferences.getBoolean("words",      t)) {layouts.add(new CustomKeyboard(this, R.layout.words,       "words",       "Words",      "qwerty").setCategory(Category.Misc));}
         if (sharedPreferences.getBoolean("zhuyin",     t)) {layouts.add(new CustomKeyboard(this, R.layout.zhuyin,      "zhuyin",      "Zhuyin",     "ㄅㄆㄇㄈ").setCategory(Category.Lang));}
         setPrimary();
         
@@ -191,7 +191,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
         }
 
         if (sharedPreferences.getBoolean("relayout", t)) {
-            int layoutCount = layouts.size()-1; // firstLayout - lastLayout;
+            int layoutCount = layouts.size()-2; // firstLayout - lastLayout;
             // int layoutCount = Math.min(layouts.size()-2, 47);
 
             int colCount = 6;
@@ -199,7 +199,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
             int finalRowCount = (int)Math.ceil(layoutCount / colCount) + 1;
             List<Keyboard.Key> layoutKeys = new ArrayList<>();
             for(Keyboard.Key key : getKeyboard("Layouts").getKeys()) {
-                if (key.codes[0] <= firstLayout && key.codes[0] >= lastLayout) {
+                if (key.codes[0] <= -400 && key.codes[0] >= -453) {
                     layoutKeys.add(key);
                 }
             }
@@ -212,7 +212,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
             int row, index = 0;
 
             for (Keyboard.Key key : getKeyboard("Layouts").getKeys()) {
-                if (key.codes[0] <= -400 && key.codes[0] >= -453) {
+                if (key.codes[0] <= firstLayout && key.codes[0] >= lastLayout) {
                     row = (index / colCount);
                     if (row >= (startRowCount-(startRowCount-finalRowCount))) {
                         key.y = bounds.maxY;
@@ -226,7 +226,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
                 }
             }
             try {
-                layoutCount = layouts.size()-1;
+                layoutCount = layouts.size()-2;
                 int layoutMod = (layoutCount % colCount);
                 if (layoutMod > 0) {
                     int hi = -400 - layoutCount; // -447
@@ -1187,7 +1187,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
 
     @Override
     public boolean onKeyLongPress(int primaryCode, KeyEvent event) {
-        return f;
+        return true;
     }
 
     long time;
@@ -1853,7 +1853,7 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
                     if (Variables.isAlt())  ic.sendKeyEvent(new KeyEvent(100, 100, KeyEvent.ACTION_DOWN, 61, 0, KeyEvent.META_ALT_ON));
                     if (Variables.isCtrl()) ic.sendKeyEvent(new KeyEvent(100, 100, KeyEvent.ACTION_DOWN, 61, 0, KeyEvent.META_CTRL_ON));
                 }
-                else sendKey(KeyEvent.KEYCODE_TAB);
+                else sendKey(KeyEvent.KEYCODE_TAB);     
             break;
             case -93: selectLine(); break;
             case -94: commitText(nextLine()+"\n"+ prevLine()); break;
@@ -2054,6 +2054,9 @@ public class CustomInputMethodService extends InputMethodService implements Keyb
             case -209: showActivity(Settings.ACTION_CAPTIONING_SETTINGS); break;
             case -210: showActivity(Settings.ACTION_DEVICE_INFO_SETTINGS); break;
 
+            case -211: performReplace(Util.addLineNumbers(getText(ic))); break;
+            case -212: performReplace(Util.removeLineNumbers(getText(ic))); break;
+            
             // 🔠🔡🔢🔣🔤 🎥🎦🎞 💭🗯🗣🗨💬 🕰 🔧🔨🔩🎛🎚🛠 ⛓🔗📎🖇🧷🧶🧵
             // ℹ 🧪🧫🧬⚗🏗🔭🔬🛸🤖 📑📓📔📕📗📘📙📚🔖 📝📃📄🧾🗒🗞📒📜📰 🖍🖌🖎🖋🖊✒✑✐✎ 🧲⚡☇🔋
             // 🔌 📐📏 📶📟🛰📡 🖱🖥💻🕹🖲🎮 🗂🗃🗄💼 📠🖨📨📩📧📥📤 🗝🔏🔐🔑🔒🔓 🧰🧮 📪📫📬📭📮🗳📦
diff --git a/app/src/main/java/com/custom/keyboard/CustomKeyboardView.java b/app/src/main/java/com/custom/keyboard/CustomKeyboardView.java
index 64356b9..0a6608e 100644
--- a/app/src/main/java/com/custom/keyboard/CustomKeyboardView.java
+++ b/app/src/main/java/com/custom/keyboard/CustomKeyboardView.java
@@ -39,13 +39,11 @@ public class CustomKeyboardView extends KeyboardView {
     
     @Override
     protected boolean onLongPress(Key key) {
-        if (key.codes[0] == Keyboard.KEYCODE_CANCEL) {
-            getOnKeyboardActionListener().onKey(-100, null);
-            return true;
-        }
+        /*
         if (key.popupResId != 2131361901) {
             return super.onLongPress(key);
         }
+        */
         if (key.popupCharacters == null || key.popupCharacters.length() == 0) {
             getOnKeyboardActionListener().onKey(key.codes[0], null);
             return true;
diff --git a/app/src/main/java/com/custom/keyboard/Util.java b/app/src/main/java/com/custom/keyboard/Util.java
index fa0c761..3d2613a 100644
--- a/app/src/main/java/com/custom/keyboard/Util.java
+++ b/app/src/main/java/com/custom/keyboard/Util.java
@@ -302,6 +302,25 @@ class Util {
         Collections.rotate(result, 1);
         return StringUtils.join(result.toArray(new String[0]), "\n");
     }
+    
+    public static String addLineNumbers(String text) {
+        String[] lines = getLines(text);
+        ArrayList<String> result = new ArrayList<>();
+        int index = 0;
+        for (String line : lines) {
+            result.add(++index+" "+line);
+        }
+        return StringUtils.join(result.toArray(new String[0]), "\n");
+    }
+    
+    public static String removeLineNumbers(String text) {
+        String[] lines = getLines(text);
+        ArrayList<String> result = new ArrayList<>();
+        for (String line : lines) {
+            result.add(line.replaceAll("^\\d+\\s*", ""));
+        }
+        return StringUtils.join(result.toArray(new String[0]), "\n");
+    }
 
     public static String increaseIndentation(String text) {
         String[] lines = getLines(text);
@@ -502,15 +521,6 @@ class Util {
         return value.length() > length ? value.substring(0, length) : value;
     }
 
-    public static boolean contains(int[] arr, int item) {
-        for (int n : arr) {
-            if (item == n) {
-                return true;
-            }
-        }
-        return false;
-    }
-
     public static boolean isDigit(int code) {
         return Character.isDigit(code);
     }
@@ -641,6 +651,14 @@ class Util {
     public static boolean contains(String haystack, String needle) {
         return haystack.contains(needle);
     }
+    public static boolean contains(int[] arr, int item) {
+        for (int n : arr) {
+            if (item == n) {
+                return true;
+            }
+        }
+        return false;
+    }
 
     public static boolean isWordSeparator(int primaryCode) {
         return "\\u0009.,;:!?\\n()[]*&amp;@{}/&lt;&gt;_+=|&quot;".contains(String.valueOf((char)primaryCode));
diff --git a/app/src/main/res/drawable-xxxhdpi/ic_nav.png b/app/src/main/res/drawable-xxxhdpi/ic_nav.png
index c728975..39db19a 100644
Binary files a/app/src/main/res/drawable-xxxhdpi/ic_nav.png and b/app/src/main/res/drawable-xxxhdpi/ic_nav.png differ
diff --git a/app/src/main/res/layout/macros.xml b/app/src/main/res/layout/macros.xml
index b50a187..1bb6207 100644
--- a/app/src/main/res/layout/macros.xml
+++ b/app/src/main/res/layout/macros.xml
@@ -49,7 +49,9 @@
         <Key android:codes="\u200B" android:keyIcon="@drawable/ic_zwsp_plus"  android:keyWidth="10%p" />
         <Key android:codes="-172"   android:keyIcon="@drawable/ic_zwsp_arrow" android:keyWidth="10%p" />
         <Key android:codes="-173"   android:keyIcon="@drawable/ic_zwsp_minus" android:keyWidth="10%p" />
-        <Key android:codes="0"      android:keyLabel=" " android:keyWidth="45%p" />
+        <Key android:codes="-211"   android:keyIcon="@drawable/ic_line_numbers" android:keyWidth="10%p" />
+        <Key android:codes="-212"   android:keyIcon="@drawable/ic_no_line_numbers" android:keyWidth="10%p" />
+        <Key android:codes="0"      android:keyIcon="@drawable/ic_blank" android:keyWidth="25%p" />
         <Key android:codes="-5"     android:keyIcon="@drawable/ic_backspace" android:isRepeatable="true" />
         <Key android:codes="-7"     android:keyIcon="@drawable/ic_delete"    android:isRepeatable="true" />
     </Row>
diff --git a/bin/custom-keyboard.signed.apk b/bin/custom-keyboard.signed.apk
index 92a19ed..bedaab3 100644
Binary files a/bin/custom-keyboard.signed.apk and b/bin/custom-keyboard.signed.apk differ
